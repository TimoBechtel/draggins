{"version":3,"file":"index.module.js","sources":["../../node_modules/@compactjs/uea/dist/index.module.js","../../node_modules/@compactjs/cap/dist/index.module.js","../../src/index.ts"],"sourcesContent":["var r=function(r){return\"string\"==typeof r?Array.from(document.querySelectorAll(r)):Array.isArray(r)?r:\"length\"in r?Array.from(r).reduce(e,[]):[r]},e=function(r,e){return e.nodeType===Node.ELEMENT_NODE&&r.push(e),r};export{r as accept};\n//# sourceMappingURL=index.module.js.map\n","var r=function(r,t,a){if(void 0===a)return Math.min(r,t);if(a<t){var i=[a,t];t=i[0],a=i[1]}return Math.min(Math.max(r,t),a)};export{r as cap};\n//# sourceMappingURL=index.module.js.map\n","import { accept, UniversalElementSelector } from '@compactjs/uea';\nimport { cap } from '@compactjs/cap';\n\nconst isTouch = 'ontouchstart' in window;\nconst startEvent = isTouch ? 'touchstart' : 'mousedown';\nconst moveEvent = isTouch ? 'touchmove' : 'mousemove';\nconst endEvent = isTouch ? 'touchend' : 'mouseup';\n\nexport const draggable = (\n  element: UniversalElementSelector,\n  {\n    limit = {\n      x: { min: 0, max: window.innerWidth },\n      y: { min: 0, max: window.innerHeight },\n    },\n    cancelWhenOutOfBoundary = false,\n    dontTouchStyles = false,\n    onDragStart = null,\n    onDragEnd = null,\n  }: DraggableOptions = {}\n): DraggableAPI => {\n  const elements = accept(element);\n  let draggable = true;\n\n  elements.forEach((element) => {\n    const translate = { x: 0, y: 0 };\n\n    if (!dontTouchStyles) initStyles(element);\n\n    element.addEventListener(startEvent, (e: MouseEvent | TouchEvent) => {\n      const event: MouseEvent | Touch = /touch/.test(e.type)\n        ? (e as TouchEvent).targetTouches[0]\n        : (e as MouseEvent);\n\n      const dimensions = getDimensions(element);\n\n      const initialMousePosition = {\n        x: event.clientX,\n        y: event.clientY,\n      };\n      const initialTranslate = { ...translate };\n      if (onDragStart)\n        onDragStart({\n          x: dimensions.left + translate.x,\n          y: dimensions.top + translate.y,\n        });\n      e.preventDefault();\n\n      document.addEventListener(moveEvent, onMouseMove);\n      document.addEventListener(endEvent, onMouseUp);\n\n      function onMouseMove(e: MouseEvent | TouchEvent) {\n        if (!draggable) return;\n        const event: MouseEvent | Touch = /touch/.test(e.type)\n          ? (e as TouchEvent).targetTouches[0]\n          : (e as MouseEvent);\n        if (\n          cancelWhenOutOfBoundary &&\n          isOutOfBoundary(event.clientX, event.clientY, limit)\n        ) {\n          removeListener(onMouseMove, onMouseUp);\n          return;\n        }\n        const mouseMoveDistance = {\n          x: event.clientX - initialMousePosition.x,\n          y: event.clientY - initialMousePosition.y,\n        };\n        translate.x = initialTranslate.x + mouseMoveDistance.x;\n        translate.y = initialTranslate.y + mouseMoveDistance.y;\n\n        if (limit) {\n          translate.x = cap(\n            translate.x,\n            limit.x.min - dimensions.left,\n            limit.x.max - dimensions.width - dimensions.left\n          );\n          translate.y = cap(\n            translate.y,\n            limit.y.min - dimensions.top,\n            limit.y.max - dimensions.height - dimensions.top\n          );\n        }\n\n        element.style.transform = `translate(${translate.x}px, ${translate.y}px)`;\n      }\n\n      function onMouseUp() {\n        if (onDragEnd)\n          onDragEnd({\n            x: dimensions.left + translate.x,\n            y: dimensions.top + translate.y,\n          });\n        removeListener(onMouseMove, onMouseUp);\n      }\n    });\n  });\n  return {\n    setDraggableState(state) {\n      draggable = state;\n    },\n  };\n};\n\nconst getDimensions = (element: HTMLElement) => ({\n  width: element.offsetWidth,\n  height: element.offsetHeight,\n  top: element.offsetTop,\n  left: element.offsetLeft,\n});\n\nconst initStyles = (element: HTMLElement) => {\n  element.style.zIndex = '99';\n};\n\nconst isOutOfBoundary = (x: number, y: number, limit: Limit) =>\n  !limit ||\n  x <= limit.x.min ||\n  x >= limit.x.max ||\n  y <= limit.y.min ||\n  y >= limit.y.max;\n\nconst removeListener = (\n  onMouseMove: EventListener,\n  onMouseUp: EventListener\n) => {\n  document.removeEventListener(moveEvent, onMouseMove);\n  document.removeEventListener(endEvent, onMouseUp);\n};\n\n// TODO: move to types.ts when bug is fixed: https://github.com/developit/microbundle/issues/669\n\nexport type Limit = {\n  x: { min: number; max: number };\n  y: { min: number; max: number };\n};\n\nexport type DraggableOptions = {\n  /**\n   * limit dragging to a boundary box\n   * set it to 'null' to disable\n   * defaults to window width/height\n   */\n  limit?: Limit;\n  /**\n   * stop dragging when mouse is out of boundaries\n   * @default false\n   */\n  cancelWhenOutOfBoundary?: boolean;\n  /**\n   * draggins by default changes z-index to 99\n   * @default false\n   */\n  dontTouchStyles?: boolean;\n\n  /**\n   * Run when dragging has started\n   */\n  onDragStart?: (position: { x: number; y: number }) => void;\n\n  /**\n   * Run when dragging has ended\n   */\n  onDragEnd?: (position: { x: number; y: number }) => void;\n};\n\nexport type DraggableAPI = {\n  /**\n   * disable / enable dragging\n   * @param state draggable\n   */\n  setDraggableState(state: boolean): void;\n};\n"],"names":["e","r","nodeType","Node","ELEMENT_NODE","push","t","a","Math","min","i","max","isTouch","window","startEvent","moveEvent","endEvent","draggable","element","limit","x","innerWidth","y","innerHeight","cancelWhenOutOfBoundary","dontTouchStyles","onDragStart","onDragEnd","elements","Array","from","document","querySelectorAll","isArray","reduce","forEach","translate","initStyles","addEventListener","event","test","type","targetTouches","dimensions","getDimensions","initialMousePosition","clientX","clientY","initialTranslate","onMouseMove","isOutOfBoundary","removeListener","onMouseUp","mouseMoveDistance","cap","left","width","top","height","style","transform","preventDefault","setDraggableState","state","offsetWidth","offsetHeight","offsetTop","offsetLeft","zIndex","removeEventListener"],"mappings":"+MAAA,IAAoJA,EAAE,SAASC,EAAED,GAAG,OAAOA,EAAEE,WAAWC,KAAKC,cAAcH,EAAEI,KAAKL,GAAGC,GCAjNA,EAAE,SAASA,EAAEK,EAAEC,GAAG,QAAG,IAASA,EAAE,OAAOC,KAAKC,IAAIR,EAAEK,GAAG,GAAGC,EAAED,EAAE,CAAC,IAAII,EAAE,CAACH,EAAED,GAAGA,EAAEI,EAAE,GAAGH,EAAEG,EAAE,GAAG,OAAOF,KAAKC,IAAID,KAAKG,IAAIV,EAAEK,GAAGC,ICGnHK,EAAU,iBAAkBC,OAC5BC,EAAaF,EAAU,aAAe,YACtCG,EAAYH,EAAU,YAAc,YACpCI,EAAWJ,EAAU,WAAa,UAE3BK,EAAY,SACvBC,SFTajB,eEmBS,SARpBkB,MAAAA,aAAQ,CACNC,EAAG,CAAEX,IAAK,EAAGE,IAAKE,OAAOQ,YACzBC,EAAG,CAAEb,IAAK,EAAGE,IAAKE,OAAOU,oBAE3BC,wBAAAA,oBACAC,gBAAAA,oBACAC,YAAAA,aAAc,WACdC,UAAAA,aAAY,OAGRC,EFrBgB,iBAAT3B,EEqBWiB,GFrBiBW,MAAMC,KAAKC,SAASC,iBAAiB/B,IAAI4B,MAAMI,QAAQhC,GAAGA,EAAE,WAAWA,EAAE4B,MAAMC,KAAK7B,GAAGiC,OAAOlC,EAAE,IAAI,CAACC,GEsB1IgB,GAAY,EA0EhB,OAxEAW,EAASO,QAAQ,SAACjB,GAChB,IAAMkB,EAAY,CAAEhB,EAAG,EAAGE,EAAG,GAExBG,GAAiBY,EAAWnB,GAEjCA,EAAQoB,iBAAiBxB,EAAY,SAACd,GACpC,IAAMuC,EAA4B,QAAQC,KAAKxC,EAAEyC,MAC5CzC,EAAiB0C,cAAc,GAC/B1C,EAEC2C,EAAaC,EAAc1B,GAE3B2B,EACDN,EAAMO,QADLD,EAEDN,EAAMQ,QAELC,OAAwBZ,GAW9B,SAASa,EAAYjD,GACnB,GAAKiB,EAAL,CACA,IAAMsB,EAA4B,QAAQC,KAAKxC,EAAEyC,MAC5CzC,EAAiB0C,cAAc,GAC/B1C,EACL,GACEwB,GACA0B,EAAgBX,EAAMO,QAASP,EAAMQ,QAAS5B,GAE9CgC,EAAeF,EAAaG,OAJ9B,CAOA,IAAMC,EAEDd,EAAMQ,QAAUF,EAErBT,EAAUhB,EAAI4B,EAAiB5B,GAH1BmB,EAAMO,QAAUD,GAIrBT,EAAUd,EAAI0B,EAAiB1B,EAAI+B,EAE/BlC,IACFiB,EAAUhB,EAAIkC,EACZlB,EAAUhB,EACVD,EAAMC,EAAEX,IAAMkC,EAAWY,KACzBpC,EAAMC,EAAET,IAAMgC,EAAWa,MAAQb,EAAWY,MAE9CnB,EAAUd,EAAIgC,EACZlB,EAAUd,EACVH,EAAMG,EAAEb,IAAMkC,EAAWc,IACzBtC,EAAMG,EAAEX,IAAMgC,EAAWe,OAASf,EAAWc,MAIjDvC,EAAQyC,MAAMC,uBAAyBxB,EAAUhB,SAAQgB,EAAUd,UAGrE,SAAS8B,IACHzB,GACFA,EAAU,CACRP,EAAGuB,EAAWY,KAAOnB,EAAUhB,EAC/BE,EAAGqB,EAAWc,IAAMrB,EAAUd,IAElC6B,EAAeF,EAAaG,GAnD1B1B,GACFA,EAAY,CACVN,EAAGuB,EAAWY,KAAOnB,EAAUhB,EAC/BE,EAAGqB,EAAWc,IAAMrB,EAAUd,IAElCtB,EAAE6D,iBAEF9B,SAASO,iBAAiBvB,EAAWkC,GACrClB,SAASO,iBAAiBtB,EAAUoC,OA+CjC,CACLU,2BAAkBC,GAChB9C,EAAY8C,KAKZnB,EAAgB,SAAC1B,SAA0B,CAC/CsC,MAAOtC,EAAQ8C,YACfN,OAAQxC,EAAQ+C,aAChBR,IAAKvC,EAAQgD,UACbX,KAAMrC,EAAQiD,aAGV9B,EAAa,SAACnB,GAClBA,EAAQyC,MAAMS,OAAS,MAGnBlB,EAAkB,SAAC9B,EAAWE,EAAWH,UAC5CA,GACDC,GAAKD,EAAMC,EAAEX,KACbW,GAAKD,EAAMC,EAAET,KACbW,GAAKH,EAAMG,EAAEb,KACba,GAAKH,EAAMG,EAAEX,KAETwC,EAAiB,SACrBF,EACAG,GAEArB,SAASsC,oBAAoBtD,EAAWkC,GACxClB,SAASsC,oBAAoBrD,EAAUoC"}