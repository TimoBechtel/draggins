{"version":3,"file":"index.module.js","sources":["../../node_modules/@compactjs/cap/dist/index.module.js","../../node_modules/@compactjs/uea/dist/index.module.js","../../src/index.ts"],"sourcesContent":["function t(t,i,n){if(void 0===n)return Math.min(t,i);if(n<i){var r=[n,i];i=r[0],n=r[1]}return Math.min(Math.max(t,i),n)}export{t as cap};\n","function r(r){return\"string\"==typeof r?document.querySelector(r):r instanceof HTMLElement?r:null}var e=n;function n(r){return\"string\"==typeof r?Array.from(document.querySelectorAll(r)):Array.isArray(r)?r:\"length\"in r?Array.from(r).reduce(t,[]):[r]}function t(r,e){return e.nodeType===Node.ELEMENT_NODE&&r.push(e),r}export{e as accept,n as select,r as selectOne};\n","import { cap } from '@compactjs/cap';\nimport { select, UniversalElementSelector } from '@compactjs/uea';\n\n// check if window s available, to support SSR\nconst isTouch = typeof window !== 'undefined' && 'ontouchstart' in window;\nconst startEvent = isTouch ? 'touchstart' : 'mousedown';\nconst moveEvent = isTouch ? 'touchmove' : 'mousemove';\nconst endEvent = isTouch ? 'touchend' : 'mouseup';\n\nexport const draggable = (\n  element: UniversalElementSelector,\n  {\n    limit = {\n      x: { min: 0, max: window.innerWidth },\n      y: { min: 0, max: window.innerHeight },\n    },\n    cancelWhenOutOfBoundary = false,\n    dontTouchStyles = false,\n    onDragStart = null,\n    onDragEnd = null,\n    preventDefault = true,\n    stopPropagation = true,\n  }: DraggableOptions = {}\n): DraggableAPI => {\n  const elements = select(element);\n  let draggable = true;\n\n  elements.forEach((element) => {\n    const translate = { x: 0, y: 0 };\n\n    if (!dontTouchStyles) initStyles(element);\n\n    element.addEventListener(startEvent, (e: MouseEvent | TouchEvent) => {\n      if (preventDefault) e.preventDefault();\n      if (stopPropagation) e.stopPropagation();\n\n      const event: MouseEvent | Touch = /touch/.test(e.type)\n        ? (e as TouchEvent).targetTouches[0]\n        : (e as MouseEvent);\n\n      const dimensions = getDimensions(element);\n\n      const initialMousePosition = {\n        x: event.clientX,\n        y: event.clientY,\n      };\n      const initialTranslate = { ...translate };\n      if (onDragStart)\n        onDragStart(\n          {\n            x: dimensions.left + translate.x,\n            y: dimensions.top + translate.y,\n          },\n          element\n        );\n\n      document.addEventListener(moveEvent, onMouseMove);\n      document.addEventListener(endEvent, onMouseUp);\n\n      function onMouseMove(e: MouseEvent | TouchEvent) {\n        if (preventDefault) e.preventDefault();\n        if (stopPropagation) e.stopPropagation();\n        if (!draggable) return;\n        const event: MouseEvent | Touch = /touch/.test(e.type)\n          ? (e as TouchEvent).targetTouches[0]\n          : (e as MouseEvent);\n        if (\n          cancelWhenOutOfBoundary &&\n          isOutOfBoundary(event.clientX, event.clientY, limit)\n        ) {\n          removeListener(onMouseMove, onMouseUp);\n          return;\n        }\n        const mouseMoveDistance = {\n          x: event.clientX - initialMousePosition.x,\n          y: event.clientY - initialMousePosition.y,\n        };\n        translate.x = initialTranslate.x + mouseMoveDistance.x;\n        translate.y = initialTranslate.y + mouseMoveDistance.y;\n\n        if (limit) {\n          translate.x = cap(\n            translate.x,\n            limit.x.min - dimensions.left,\n            limit.x.max - dimensions.width - dimensions.left\n          );\n          translate.y = cap(\n            translate.y,\n            limit.y.min - dimensions.top,\n            limit.y.max - dimensions.height - dimensions.top\n          );\n        }\n\n        element.style.transform = `translate(${translate.x}px, ${translate.y}px)`;\n      }\n\n      function onMouseUp() {\n        if (onDragEnd)\n          onDragEnd(\n            {\n              x: dimensions.left + translate.x,\n              y: dimensions.top + translate.y,\n            },\n            element\n          );\n        removeListener(onMouseMove, onMouseUp);\n      }\n    });\n  });\n  return {\n    setDraggableState(state) {\n      draggable = state;\n    },\n  };\n};\n\nconst getDimensions = (element: HTMLElement) => ({\n  width: element.offsetWidth,\n  height: element.offsetHeight,\n  top: element.offsetTop,\n  left: element.offsetLeft,\n});\n\nconst initStyles = (element: HTMLElement) => {\n  element.style.zIndex = '99';\n};\n\nconst isOutOfBoundary = (x: number, y: number, limit: Limit) =>\n  !limit ||\n  x <= limit.x.min ||\n  x >= limit.x.max ||\n  y <= limit.y.min ||\n  y >= limit.y.max;\n\nconst removeListener = (\n  onMouseMove: (e: MouseEvent | TouchEvent) => void,\n  onMouseUp: (e: MouseEvent | TouchEvent) => void\n) => {\n  document.removeEventListener(moveEvent, onMouseMove);\n  document.removeEventListener(endEvent, onMouseUp);\n};\n\n// TODO: move to types.ts when bug is fixed: https://github.com/developit/microbundle/issues/669\n\nexport type Limit = {\n  x: { min: number; max: number };\n  y: { min: number; max: number };\n};\n\nexport type DraggableOptions = {\n  /**\n   * limit dragging to a boundary box\n   * set it to 'null' to disable\n   * defaults to window width/height\n   */\n  limit?: Limit;\n  /**\n   * stop dragging when mouse is out of boundaries\n   * @default false\n   */\n  cancelWhenOutOfBoundary?: boolean;\n  /**\n   * draggins by default changes z-index to 99\n   * @default false\n   */\n  dontTouchStyles?: boolean;\n\n  /**\n   * prevents default behavior of dragging\n   * @default true\n   */\n  preventDefault?: boolean;\n  /**\n   * stops event propagation\n   * @default true\n   */\n  stopPropagation?: boolean;\n\n  /**\n   * Run when dragging has started\n   */\n  onDragStart?: (\n    position: { x: number; y: number },\n    target: HTMLElement\n  ) => void;\n\n  /**\n   * Run when dragging has ended\n   */\n  onDragEnd?: (position: { x: number; y: number }, target: HTMLElement) => void;\n};\n\nexport type DraggableAPI = {\n  /**\n   * disable / enable dragging\n   * @param state draggable\n   */\n  setDraggableState(state: boolean): void;\n};\n"],"names":["t","i","n","Math","min","r","max","e","nodeType","Node","ELEMENT_NODE","push","isTouch","window","startEvent","moveEvent","endEvent","draggable","element","limit","x","innerWidth","y","innerHeight","cancelWhenOutOfBoundary","dontTouchStyles","onDragStart","onDragEnd","preventDefault","stopPropagation","elements","Array","from","document","querySelectorAll","isArray","reduce","forEach","translate","initStyles","addEventListener","event","test","type","targetTouches","dimensions","getDimensions","initialMousePosition","clientX","clientY","initialTranslate","onMouseMove","isOutOfBoundary","removeListener","onMouseUp","mouseMoveDistance","cap","left","width","top","height","style","transform","setDraggableState","state","offsetWidth","offsetHeight","offsetTop","offsetLeft","zIndex","removeEventListener"],"mappings":"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"}